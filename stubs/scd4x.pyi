from typing import List, Union

class SCD4X:
    def __init__(self, address=None, quiet: bool=True) -> None: ...
    def rdwr(self, command, value=None, response_length=0, delay=0) -> List[int]: ...
    def reset(self) -> None: ...
    def factory_reset(self) -> None: ...
    def self_test(self) -> None: ...
    def measure(self, blocking=True, timeout=10): ...
    def data_ready(self) -> bool: ...
    def get_serial_number(self) -> str: ...
    def start_periodic_measurement(self, low_power: bool=False) -> None: ...
    def stop_periodic_measurement(self) -> None: ...
    def set_ambient_pressure(self, ambient_pressure: float) -> None: ...
    def set_temperature_offset(self, temperature_offset: float) -> None: ...
    def get_temperature_offset(self) -> float: ...
    def set_altitude(self, altitude: int) -> None: ...
    def get_altitude(self) -> int: ...
    def set_automatic_self_calibration_enabled(self, value: int) -> None: ...
    def get_automatic_self_calibration_enabled(self) -> bool: ...
    def persist_settings(self) -> None: ...
    def crc8(self, data: Union[int, List[int]], polynomial: int=0x31): ...
